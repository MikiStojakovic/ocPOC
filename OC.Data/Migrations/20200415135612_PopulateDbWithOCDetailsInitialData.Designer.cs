// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OC.Data;

namespace OC.Data.Migrations
{
    [DbContext(typeof(NatixisDbContext))]
    [Migration("20200415135612_PopulateDbWithOCDetailsInitialData")]
    partial class PopulateDbWithOCDetailsInitialData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OC.Core.Models.Conseiller", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FourisseurId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FourisseurId");

                    b.ToTable("Conseillers");
                });

            modelBuilder.Entity("OC.Core.Models.Fourisseur", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Fourisseur");
                });

            modelBuilder.Entity("OC.Core.Models.OuvertureCompte", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ConseillerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DocPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OcRef")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ConseillerId");

                    b.ToTable("OuvertureComptes");
                });

            modelBuilder.Entity("OC.Core.Models.OuvertureCompteDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModeSoumission")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NatureCompte")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OuvertureCompteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TypeCompte")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOuverture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OuvertureCompteId")
                        .IsUnique();

                    b.ToTable("OuvertureCompteDetails");
                });

            modelBuilder.Entity("OC.Core.Models.Conseiller", b =>
                {
                    b.HasOne("OC.Core.Models.Fourisseur", "Fourisseur")
                        .WithMany("Conseillers")
                        .HasForeignKey("FourisseurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OC.Core.Models.OuvertureCompte", b =>
                {
                    b.HasOne("OC.Core.Models.Conseiller", "conseiller")
                        .WithMany("Ocs")
                        .HasForeignKey("ConseillerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OC.Core.Models.OuvertureCompteDetails", b =>
                {
                    b.HasOne("OC.Core.Models.OuvertureCompte", "OuvertureCompte")
                        .WithOne("OcDetails")
                        .HasForeignKey("OC.Core.Models.OuvertureCompteDetails", "OuvertureCompteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
